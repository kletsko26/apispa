import { useState, useEffect } from "react";
import { Link, useParams } from "react-router-dom";

import { JSONWrapper } from "@/components/JSONWrapper/JSONWrapper";
import { useJSONService } from "@/services/useJSONService";

import styles from "./albumPage.module.scss";

export const AlbumPage = () => {
  const { loading, error, getAlbumDataByID } = useJSONService();
  const [albumData, setAlbumData] = useState([]);
  const { albumID } = useParams();

  useEffect(() => {
    getAlbumDataByID(albumID).then(setAlbumData);
  }, []);

  const handleImgLoadError = ({ target }) => {
    target.src =
      "data:image/svg+xml,%3Csvg%20width%3D%22100px%22%20height%3D%22100px%22%20viewBox%3D%220%200%2024%2024%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%3Cpath%20d%3D%22M3%2011C3%207.22876%203%205.34315%204.17157%204.17157C5.34315%203%207.22876%203%2011%203H13C16.7712%203%2018.6569%203%2019.8284%204.17157C21%205.34315%2021%207.22876%2021%2011V13C21%2016.7712%2021%2018.6569%2019.8284%2019.8284C18.6569%2021%2016.7712%2021%2013%2021H11C7.22876%2021%205.34315%2021%204.17157%2019.8284C3%2018.6569%203%2016.7712%203%2013V11Z%22%20stroke%3D%22%23222222%22/%3E%3Cpath%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%20d%3D%22M18.9976%2014.2904L18.6544%2013.9471L18.6385%2013.9313C18.238%2013.5307%2017.9149%2013.2077%2017.6314%2012.9687C17.3394%2012.7226%2017.055%2012.5353%2016.7221%2012.4349C16.2512%2012.2928%2015.7488%2012.2928%2015.2779%2012.4349C14.945%2012.5353%2014.6606%2012.7226%2014.3686%2012.9687C14.0851%2013.2077%2013.762%2013.5307%2013.3615%2013.9313L13.3456%2013.9471C13.0459%2014.2469%2012.8458%2014.4462%2012.6832%2014.5807C12.5218%2014.7142%2012.452%2014.7359%2012.4237%2014.7408C12.3029%2014.762%2012.1785%2014.7381%2012.0742%2014.6735C12.0498%2014.6584%2011.993%2014.6123%2011.8928%2014.4285C11.7917%2014.2432%2011.68%2013.9838%2011.513%2013.5942L11.4596%2013.4696L11.4475%2013.4414L11.4475%2013.4414C11.0829%2012.5907%2010.7931%2011.9144%2010.5107%2011.4126C10.2237%2010.9026%209.90522%2010.4984%209.44575%2010.268C9.03426%2010.0618%208.57382%209.97308%208.11515%2010.0118C7.603%2010.055%207.15716%2010.3121%206.70134%2010.6789C6.25273%2011.04%205.73245%2011.5603%205.07799%2012.2148L5.07798%2012.2148L5.05634%2012.2364L5%2012.2928V12.9999C5%2013.2462%205.00007%2013.4816%205.00044%2013.7065L5.76344%2012.9435C6.44443%2012.2626%206.92686%2011.7811%207.32835%2011.458C7.72756%2011.1366%207.98255%2011.0265%208.19924%2011.0082C8.47444%2010.985%208.75071%2011.0382%208.9976%2011.162C9.192%2011.2594%209.38786%2011.4564%209.63918%2011.903C9.89194%2012.3521%2010.1611%2012.9783%2010.5404%2013.8635L10.5938%2013.9881L10.6034%2014.0105L10.6034%2014.0105C10.7583%2014.3719%2010.8884%2014.6754%2011.0149%2014.9073C11.1448%2015.1455%2011.3038%2015.3727%2011.5479%2015.5238C11.8608%2015.7175%2012.2341%2015.7894%2012.5966%2015.7258C12.8794%2015.6761%2013.1114%2015.5242%2013.3204%2015.3513C13.524%2015.183%2013.7575%2014.9495%2014.0355%2014.6714L14.0527%2014.6542C14.4728%2014.2341%2014.766%2013.9416%2015.013%2013.7334C15.2553%2013.5292%2015.4185%2013.437%2015.5667%2013.3922C15.8493%2013.307%2016.1507%2013.307%2016.4333%2013.3922C16.5815%2013.437%2016.7447%2013.5292%2016.987%2013.7334C17.234%2014.2341%2017.5272%2014.6542%2017.9473%2014.6542L18.9755%2015.6825C18.9887%2015.2721%2018.9948%2014.812%2018.9976%2014.2904Z%22%20fill%3D%22%23222222%22/%3E%3Ccircle%20cx%3D%2216.5%22%20cy%3D%227.5%22%20r%3D%221.5%22%20fill%3D%22%23222222%22/%3E%3C/svg%3E";
    target.classList.add(styles.imageNotLoaded);
  };

  const { userId, title, authorName, photos } = albumData;

  return (
    <JSONWrapper loading={loading} error={error}>
      {albumData && (
        <div className={styles.albumPage}>
          <div>
            <h2 className={`${styles.text}`}>{title}</h2>
            <p className={`${styles.text} ${styles.descr}`}>
              Created by:{" "}
              <Link to={`/users/${userId}`} className={`${styles.link}`}>
                {authorName}
              </Link>
            </p>
          </div>
          {photos && (
            <ul className={styles.grid}>
              {photos.map(({ id, thumbnailUrl, url, title }) => (
                <li key={id} className={styles.item}>
                  <a href={url}>
                    <img
                      src={thumbnailUrl}
                      alt={title}
                      onError={handleImgLoadError}
                      className={styles.image}
                    />
                  </a>
                </li>
              ))}
            </ul>
          )}
        </div>
      )}
    </JSONWrapper>
  );
};
